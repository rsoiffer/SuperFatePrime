{"version":3,"file":"component---src-pages-index-tsx-84eaffec4eec5d4a4fcf.js","mappings":"qNAUA,SAASA,EAAWC,GAClB,IAAMC,EAASD,EAAME,MAAM,0CAE3B,OAAO,uBAAKC,UAAWC,EAAAA,eACpBH,EAAOI,KAAI,SAAAC,GACV,IAAMC,EAAMD,EAAME,MAAM,oBAExB,OAAe,OAARD,EACH,gBAAC,KAAD,CAAOE,KAAMH,IACb,gBAAC,KAAD,CAAKI,MAAOC,SAASJ,EAAI,UAKnC,mBAAe,GAA+B,IACtCK,EADqC,EAA3BC,KACGC,QAAQC,MAAM,GAAGC,SACpC,EAA8BC,EAAAA,UAAe,GAAtCC,EAAP,KAAgBC,EAAhB,KAEA,OACE,gBAAC,KAAD,KACE,gBAAC,IAAD,KACE,gDAGF,gBAAC,KAAD,MACA,gBAAC,IAAD,CAAKC,KAAMR,EAAOM,QAASA,EAASC,WAAYA,IAEhD,uBAAKhB,UAAWC,EAAAA,aACXc,EAAU,IAAMd,EAAAA,mBAA4B,KAC/C,gBAAC,EAAAiB,YAAD,KAAcT,EAAMU,MAEnBC,EAAAA,WAAAA,KAAwB,SAACC,EAAMC,GAC9B,OAAO,uBAAKtB,UAAWC,EAAAA,WACrB,0BAAKoB,EAAKf,KAAV,QAAqBe,EAAKE,GAA1B,KAEA,0CACA,uBAAKvB,UAAWC,EAAAA,UACboB,EAAKG,aAAatB,KAAI,SAACL,EAAOyB,GAC7B,OAAO1B,EAAWC,OAItB,wCACA,uBAAKG,UAAWC,EAAAA,UACboB,EAAKI,WAAWvB,KAAI,SAACL,EAAOyB,GAC3B,OAAO1B,EAAWC,OAItB,oCACA,uBAAKG,UAAWC,EAAAA,UACboB,EAAKK,OAAOC,SAAQ,SAACC,EAAUN,GAC9B,MAAO,CACL,uBAAKtB,UAAWC,EAAAA,cAAsB2B,EAASC,MAC/C,uBAAK7B,UAAWC,EAAAA,eAAhB,eAAmD2B,EAASE,OAC5DF,EAASG,OAAO7B,KAAI,SAACL,EAAOyB,GAC1B,OAAO1B,EAAWC,WAM1B,yCACA,uBAAKG,UAAWC,EAAAA,UACc,GAA3BoB,EAAKW,YAAYC,OACdZ,EAAKW,YAAY9B,KAAI,SAACL,EAAOyB,GAC7B,OAAO1B,EAAWC,MAElB","sources":["webpack://superfly-prime/./src/pages/index.tsx"],"sourcesContent":["import { graphql, PageProps, Link } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\r\nimport * as React from \"react\";\r\nimport Layout, { TopBar } from \"../components/layout\";\r\nimport { Die, Trait } from \"../components/layout\";\r\nimport YAMLData from \"../data/example-characters.yaml\";\r\nimport * as styles from \"../components/layout.module.scss\";\r\nimport { Toc } from \"../components/table-of-contents\";\r\n\r\nfunction traitEntry(trait) {\r\n  const tokens = trait.split(/\\b(?=d[1-9][0-9]*)|(?<=d[1-9][0-9]*)\\b/);\r\n\r\n  return <div className={styles.traitSetEntry}>\r\n    {tokens.map(token => {\r\n      const die = token.match(/^d([1-9][0-9]*)$/);\r\n\r\n      return die === null\r\n        ? <Trait name={token} />\r\n        : <Die sides={parseInt(die[1])} />\r\n    })}\r\n  </div>;\r\n}\r\n\r\nexport default ({ data }: PageProps<any>) => {\r\n  const rules = data.allFile.nodes[0].childMdx;\r\n  const [tocOpen, setTocOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet>\r\n        <title>Superfly Prime</title>\r\n      </Helmet>\r\n\r\n      <TopBar />\r\n      <Toc page={rules} tocOpen={tocOpen} setTocOpen={setTocOpen} />\r\n\r\n      <div className={styles.mainContent\r\n        + (tocOpen ? \" \" + styles.mainContentTocOpen : \"\")}>\r\n        <MDXRenderer>{rules.body}</MDXRenderer>\r\n\r\n        {YAMLData.characters.map((char, index) => {\r\n          return <div className={styles.character}>\r\n            <h3>{char.name} (PL {char.pl})</h3>\r\n\r\n            <h4>Distinctions</h4>\r\n            <div className={styles.traitSet}>\r\n              {char.distinctions.map((trait, index) => {\r\n                return traitEntry(trait)\r\n              })}\r\n            </div>\r\n\r\n            <h4>Approaches</h4>\r\n            <div className={styles.traitSet}>\r\n              {char.approaches.map((trait, index) => {\r\n                return traitEntry(trait)\r\n              })}\r\n            </div>\r\n\r\n            <h4>Powers</h4>\r\n            <div className={styles.traitSet}>\r\n              {char.powers.flatMap((powerset, index) => {\r\n                return [\r\n                  <div className={styles.traitSetDesc}>{powerset.desc}</div>,\r\n                  <div className={styles.traitSetLimit}>Limitation: {powerset.limit}</div>,\r\n                  powerset.traits.map((trait, index) => {\r\n                    return traitEntry(trait)\r\n                  })\r\n                ]\r\n              })}\r\n            </div>\r\n\r\n            <h4>Specialties</h4>\r\n            <div className={styles.traitSet}>\r\n              {char.specialties.length != 0\r\n                ? char.specialties.map((trait, index) => {\r\n                  return traitEntry(trait)\r\n                })\r\n                : <i>None</i>}\r\n            </div>\r\n          </div>\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allFile(filter: {sourceInstanceName: {eq: \"documents\"}, name: {eq: \"rules\"}}) {\r\n      nodes {\r\n        childMdx {\r\n          body\r\n          tableOfContents\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["traitEntry","trait","tokens","split","className","styles","map","token","die","match","name","sides","parseInt","rules","data","allFile","nodes","childMdx","React","tocOpen","setTocOpen","page","MDXRenderer","body","YAMLData","char","index","pl","distinctions","approaches","powers","flatMap","powerset","desc","limit","traits","specialties","length"],"sourceRoot":""}